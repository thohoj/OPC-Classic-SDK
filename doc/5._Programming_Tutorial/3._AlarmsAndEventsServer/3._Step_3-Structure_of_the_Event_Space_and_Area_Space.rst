**Step 3 - Structure of the Event Space and Area Space**
--------------------------------------------------------

This section describes the structure of the object trees which are used
by the OPC Toolkit to process the OPC Client queries.

The OPC Server supports the event category “SimulationCategory” with one
attribute called “SimulationAttribute”. Events of this category are
initiated by the event source “SimulationElement” of the event space.
The following methods generated by the wizard create the two object
trees.

::

   // Creates the Area Space
   long OpcServer::buildAddressSpace(void) 
   { 
       MyCreator* creator = (MyCreator*)getApp()->getCreator(); 
       tstring aName; // AE
       AeAddressSpaceRoot* aeRoot = getApp()->getAeAddressSpaceRoot();
       AeAddressSpaceElement* aeElement = creator->createAeAddressSpaceElement();
       aName = tstring(_T("SimulationElement")); aeElement->setName(aName);
       aeElement->setHasChildren(FALSE); aeRoot->addChild(aeElement); 

       return S_OK; 

   } // end buildAddressSpace

::

   // Creates the Event Space

   long OpcServer::buildEventCategories(void)
   {
       tstring categoryName(_T("SimulationCategory"));
       m_simulationCategory = new AeCategory(EnumEventType_SIMPLE, CATEGORY_ID_SIMULATION, categoryName);
       getApp()->addAeCategory(m_simulationCategory);

       tstring attributeName(_T("SimulationAttribute"));
       m_simulationCategory->addAttribute(ATTRIBUTE_ID_SIMULATION, attributeName, VT_UI2);

       return S_OK;

   } // end buildEventCategories

The methods that create the server’s area space and source space exist
and must be used. For this, go to the \**_tmain*\* function and replace
the following code:

::

   // Start the OPC server's I/O internal mechanism
   if (SUCCEEDED(pServer->start()))
   {    
       // declare the namespaces built and the server ready for clients to connect        
       pServer->ready();
   }

with this one:

::

   // Start the OPC server's I/O internal mechanism
   if (SUCCEEDED(pServer->start()))
   {
       // build the namespace
       pServer->buildAddressSpace();
       pServer->buildEventCategories();
       // declare the namespaces built and the server ready for clients to connect
       pServer->ready();
   }

After you have compiled the server, you can access the server with an
OPC Alarms and Events Client.

You can now browse the event space and area space of the OPC Server and
receive the names of the created objects. The figure below shows the two
object trees of the server in the Softing OPC Demo Client.

Bild
====
